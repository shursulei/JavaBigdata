# In this file you can override any option defined in the reference files.
# Copy in parts of the reference files and modify as you please.

akka {

  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "DEBUG"

  # Filter of log events that is used by the LoggingAdapter before
  # publishing log events to the eventStream.
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = "cluster"

    default-dispatcher {
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 10
    }
  }

  remote {
    # The port clients should connect to. Default is 2552.
    netty.tcp.port = 4711
  }
}
my-forkjoin-dispather{
  type= Dispatcher
  executor="fork-join-executor"
    #配置fork-join线程池
    fork-join-executor{
      parallelism-min=3 #最小并发数
      parallelism-factor=3.0 #并发因子
      parallelism-max=15 #线程最大值
    }
    throughput=1
}

my-theadpool-dispather{
  #dispather类型
  type= Dispatcher
  executor="thread-pool-executor"
  #配置线程池
  thread-pool-executor{
    #最小线程数
    core-pool-size-min=2
    #并发使用的最大线程数=处理器*因子
    core-pool-size-factor=3.0
    #最大线程数
    core-pool-size-max=15
  }
  throughput=1
}

akka.actor.default-mailbox{
  #邮箱类型
  mailbox-type="akka.dispatch.UnboundedMailbox"
  #邮箱容量
  mailbox-capacity=1000
  #入队超时时间
  mailbox-push-timeout-time=10s
}

msgprio-mailbox {
  mailbox-type= "com.shursulei.test.MsgPriorityMailBox"
}

//akka {
//  actor {
//    provider = "cluster"
//  }
//  remote.artery {
//    canonical {
//      hostname = "127.0.0.1"
//      port = 2551
//    }
//  }
//
//  cluster {
//    seed-nodes = [
//      "akka://ClusterSystem@127.0.0.1:2551",
//      "akka://ClusterSystem@127.0.0.1:2552"]
//
//    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
//  }
//}